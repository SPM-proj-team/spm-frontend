# This workflow will install Python dependencies, setup MySQL test database and run pytest with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: SPM

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
        - '3306:3306'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10

    steps:
    - name: Clone backend repo 
      uses: actions/checkout@v3
      with:
        repository: SPM-proj-team/spm-backend
        ref: sprint-3
        token: ${{ secrets.ACCESS_TOKEN }}
        
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Remove Chrome
      run: sudo apt purge google-chrome-stable

    - name: Remove default Chromium
      run: sudo apt purge chromium-browser

    - name: Install a new Chromium
      run: sudo apt install -y chromium-browser

    - name: Create env file
      run: |
        touch .env
        echo DB_HOSTNAME=${{ secrets.DB_HOSTNAME }} >> .env
        echo DB_PORT=3306 >> .env
        echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
        echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
        echo DB_NAME=${{ secrets.DB_NAME }} >> .env
        
    - name: Setup MySQL database
      run: |
        mysql -h ${{ secrets.DB_HOSTNAME }} --port 3306 -e "DROP SCHEMA IF EXISTS ${{ secrets.DB_NAME }};" -u${{ secrets.DB_USERNAME }} -p${{ secrets.DB_PASSWORD }}
        mysql -h ${{ secrets.DB_HOSTNAME }} --port 3306 -u${{ secrets.DB_USERNAME }} -p${{ secrets.DB_PASSWORD }} < tests/sql/test_spm.sql
        mysql -h ${{ secrets.DB_HOSTNAME }} --port 3306 -e "SHOW schemas;" -u${{ secrets.DB_USERNAME }} -p${{ secrets.DB_PASSWORD }}
     
    - name: Clone frontend repo 
      uses: actions/checkout@v3
      with:
        repository: SPM-proj-team/spm-frontend
        ref: sprint-3
        token: ${{ secrets.ACCESS_TOKEN }}
        path: './spm-frontend'
    
    - name: Install frontend dependencies and run frontend service in background 
      run: |
        cd ./spm-frontend &&
        npm install &&
        npm run serve &
        sleep 20 &&
        cd ../

    - name: Run backend in background
      run: |
        ( python run.py > /dev/null 2> /dev/null & ) &
        sleep 5
        
    - name: Run unit tests
      run: |
        export PYTHONPATH='.'
        python tests/unit_tests.py
        
    - name: Run integration tests using pytest
      run: |
        export PYTHONPATH='.'
        pytest -v -m "not e2e"
        
    - name: Run selenium end-to-end tests using pytest
      run: |
        export PYTHONPATH='.'
        pytest -v -m "e2e"
        
    - name: Clean running services 
      run: |
        pkill -f node
        sudo kill -9 `lsof -t -i :5000`
